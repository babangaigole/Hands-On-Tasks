1. Create ReplicaSet in a declarative way
    a) Create a ReplicaSet
        Name: test-rs
        Image: gaigoleb2/cuswebsrvhostname:v1
        Replicas: 10
    b) Create a service to expose the ReplicaSet
        Service name: test-svc
        Service type: NodePort
        nodePort: 32000
        port: 8000
        targetPort: 80
    c) Check connectivity using curl

Solution:

1. Create ReplicaSet in an declarative way

a) Create a ReplicaSet

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: testrs
spec:
  replicas: 10
  selector:
    matchLabels:
      env: prod
  template:
    metadata:
      name: testpod
      labels:
        env: prod
    spec:
      containers:
        -  name: testcontainer
           image: gaigoleb2/cuswebsrvhostname:v1

b) Create a service to expose the ReplicaSet

apiVersion: v1
kind: Service
metadata:
  name: testsvc
spec:
  type: NodePort
  selector:
    env: prod
  ports:
    - targetPort: 80
      port: 8000
      nodePort: 32000

c) Check connectivity using curl

$ curl 192.168.49.2:32000
####################################
### My hostname is :  testrs-mjvtw ###
####################################

$ kubectl get po,rs,svc
NAME               READY   STATUS    RESTARTS   AGE
pod/testrs-2wkr5   1/1     Running   0          69s
pod/testrs-5gq8j   1/1     Running   0          69s
pod/testrs-8c8s4   1/1     Running   0          69s
pod/testrs-kck5d   1/1     Running   0          69s
pod/testrs-kpq4x   1/1     Running   0          69s
pod/testrs-m24d2   1/1     Running   0          69s
pod/testrs-nm6c6   1/1     Running   0          69s
pod/testrs-s5qxs   1/1     Running   0          69s
pod/testrs-sg96k   1/1     Running   0          69s
pod/testrs-xgxrg   1/1     Running   0          69s

NAME                     DESIRED   CURRENT   READY   AGE
replicaset.apps/testrs   10        10        10      69s

NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
service/kubernetes   ClusterIP   10.96.0.1        <none>        443/TCP          10d
service/testsvc      NodePort    10.110.254.231   <none>        8000:32000/TCP   62s


